{"version":3,"sources":["js/Header.js","js/FeatureItem.js","js/Featured.js","js/Quote.js","js/Markets.js","js/utils.js","js/Search.js","js/Stock.js","js/CurrencySelect.js","js/Calculator.js","js/Forex.js","js/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","Link","to","FeatureItem","_ref","stock","color","handleQuoteChange","symbol","name","price","day_change","change_pct","key","style","cursor","onClick","concat","Featured","featuredStocks","upColor","downColor","map","js_FeatureItem","Quote","quote","currentQuoteColor","historicData","stock_exchange_long","price_open","day_high","day_low","volume","volume_avg","year_high","year_low","borderTop","highcharts_react_min_default","highcharts","Highcharts","constructorType","options","series","data","tooltip","valueDecimals","credits","enabled","Markets","state","featuredIsLoading","featuredStockSymbols","getFeaturedStocks","_callee","symbols","res","regenerator_default","wrap","_context","prev","next","axios","_this","apiKey","sent","setState","t0","console","log","stop","this","_this$state","_this$props","quoteIsLoading","js_Featured","react_transition_group","in","appear","timeout","classNames","js_Quote","Component","resources","get","call","Object","asyncToGenerator","mark","url","result","cancel","CancelToken","source","abrupt","cancelToken","token","isCancel","message","_x","apply","arguments","makeRequestCreator","Search","clearSearch","handleSearchChange","handleSearchKeyDowns","searchValue","searchResults","type","placeholder","value","onChange","e","onKeyDown","onBlur","preventDefault","i","onMouseDown","Stock","search","val","target","keyCode","prevState","length","_this$state2","js_Search","currencySelect","currenciesArray","onSelectCurrency","id","currency","prototypes","PropTypes","array","isRequired","func","Calculator","valueA","valueB","handleInputChange","htmlFor","CurrencySelect","Forex","currencyA","currencyB","rates","ratesAreLoading","getExchangeRates","toFixed","input","rate","newValue","_this$state3","js_Calculator","todaysDate","yearsAgo","undefined","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","formatForHighcharts","keys","dateString","getTime","Number","close","withRouter","location","_useState","useState","_useState2","slicedToArray","setQuote","_useState3","_useState4","setHistoricData","_useState5","_useState6","quoteSymbol","setQuoteSymbol","_useState7","_useState8","setQuoteIsLoading","fetchRealtimeData","fetchHistoricData","_ref2","stockQuote","_ref3","_callee2","dateFrom","formattedData","_context2","history","_x2","process","REACT_APP_API_KEY","pathname","Switch","Route","path","render","Markets_Markets","assign","Stock_Stock","Forex_Forex","App","HashRouter","exact","Redirect","js_Header","Main","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddec1634.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  return (\n    <div className=\"header-grid\">\n      {/* =Logo div - uses CSS background-image */}\n      <div className=\"header-grid__logo\" />\n      <div className=\"header-grid__nav\">\n        <ul className=\"header-nav\">\n          <li className=\"header-nav__item\">\n            <Link to=\"/markets\">Markets</Link>\n          </li>\n          <li className=\"header-nav__item\">\n            <Link to=\"/stock\">Stock Quote</Link>\n          </li>\n          <li className=\"header-nav__item\">\n            <Link to=\"/forex\">Forex</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// the items inside the featured section\n// clicking on them shows the details for that item below the featured area\nconst FeatureItem = ({ stock, color, handleQuoteChange }) => {\n  const { symbol, name, price, day_change, change_pct } = stock;\n  return (\n    <div className=\"featured-container__item\" key={symbol}>\n      <ul\n        className=\"featured-stock\"\n        style={{ cursor: 'pointer' }}\n        onClick={() => {\n          handleQuoteChange(stock.symbol);\n        }}\n      >\n        <li className=\"featured-stock__name\">{name}</li>\n        <li className=\"featured-stock__price\">{price}</li>\n        <li className=\"featured-stock__change\" style={{ color: color }}>\n          {`${day_change} (${change_pct}%)`}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nFeatureItem.propTypes = {\n  stock: PropTypes.object.isRequired,\n  color: PropTypes.string.isRequired,\n  handleQuoteChange: PropTypes.func.isRequired,\n};\n\nexport default FeatureItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeatureItem from './FeatureItem';\n\n// this is the container for the stock indexes on the Market page\n// maps over the featuredStocks array to create 3 featured Items\nconst Featured = ({\n  featuredStocks,\n  handleQuoteChange,\n  upColor,\n  downColor,\n}) => {\n  return (\n    <div className=\"featured-container\">\n      {featuredStocks.map(stock => {\n        const color = stock.day_change >= 0 ? upColor : downColor;\n        return (\n          <FeatureItem\n            key={stock.symbol}\n            stock={stock}\n            color={color}\n            handleQuoteChange={handleQuoteChange}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nFeatured.propTypes = {\n  featuredStocks: PropTypes.array.isRequired,\n  handleQuoteChange: PropTypes.func.isRequired,\n  upColor: PropTypes.string.isRequired,\n  downColor: PropTypes.string.isRequired,\n};\n\nexport default Featured;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\n\n// displays details for the chosed stock symbol\nconst Quote = ({ quote, currentQuoteColor, historicData }) => {\n  const {\n      name,\n      symbol,\n      price,\n      stock_exchange_long,\n      day_change,\n      change_pct,\n      price_open,\n      day_high,\n      day_low,\n      volume,\n      volume_avg,\n    } = quote,\n    year_high = quote['52_week_high'],\n    year_low = quote['52_week_low'];\n\n  return (\n    <div\n      className=\"quote-grid\"\n      style={{ borderTop: `solid 1rem ${currentQuoteColor}` }}\n    >\n      <div className=\"quote-grid__header\">\n        <ul className=\"quote-header\">\n          <li className=\"quote-header__name-and-symbol\">\n            <span className=\"quote-header__name\">{name}</span>\n            <span className=\"quote-header__symbol\">{`(${symbol})`}</span>\n          </li>\n          <li className=\"quote-header__exchange\">{stock_exchange_long}</li>\n          <li className=\"quote-header__price\">{price}</li>\n          <li\n            className=\"quote-header__change\"\n            style={{ color: currentQuoteColor }}\n          >{`${day_change} (${change_pct})%`}</li>\n        </ul>\n      </div>\n      <div className=\"quote-grid__details\">\n        <table className=\"quote-details-table\">\n          <tbody>\n            <tr>\n              <td>Open</td>\n              <td>{price_open}</td>\n            </tr>\n            <tr>\n              <td>Day's Range</td>\n              <td>{`${day_low} - ${day_high}`}</td>\n            </tr>\n            <tr>\n              <td>52 Week Range</td>\n              <td>{`${year_low} - ${year_high}`}</td>\n            </tr>\n            <tr>\n              <td>Volume</td>\n              <td>{volume}</td>\n            </tr>\n            <tr>\n              <td>Avg. Volume</td>\n              <td>{volume_avg}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className=\"quote-grid__highchart\">\n        <HighchartsReact\n          highcharts={Highcharts}\n          constructorType={'stockChart'}\n          options={{\n            series: [\n              {\n                data: historicData,\n                tooltip: {\n                  valueDecimals: 2,\n                },\n              },\n            ],\n            credits: {\n              enabled: false,\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nQuote.propTypes = {\n  quote: PropTypes.object.isRequired,\n  currentQuoteColor: PropTypes.string.isRequired,\n};\n\nexport default Quote;\n","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport axios from 'axios';\nimport Featured from './Featured';\nimport Quote from './Quote';\nimport PropTypes from 'prop-types';\n\nexport default class Markets extends Component {\n  static propTypes = {\n    upColor: PropTypes.string.isRequired,\n    downColor: PropTypes.string.isRequired,\n  };\n\n  state = {\n    featuredIsLoading: true,\n    featuredStockSymbols: '^DJI,^SP400,^IXIC',\n    featuredStocks: [],\n  };\n\n  // get the stock indexes info when the page loads\n  componentDidMount() {\n    this.getFeaturedStocks(this.state.featuredStockSymbols);\n  }\n\n  // fetch info for the featuredStockSymbols\n  getFeaturedStocks = async symbols => {\n    try {\n      const res = await axios(\n        `https://www.worldtradingdata.com/api/v1/stock?symbol=${symbols}&api_token=${this.props.apiKey}`\n      );\n      const featuredStocks = res.data.data;\n      this.setState({ featuredStocks, featuredIsLoading: false });\n      // console.log(featuredStocks);\n    } catch (err) {\n      console.log('Error fetching featured stocks', err);\n    }\n  };\n  render() {\n    const { featuredStocks, featuredIsLoading } = this.state;\n    const {\n      upColor,\n      downColor,\n      handleQuoteChange,\n      quote,\n      quoteIsLoading,\n      historicData,\n    } = this.props;\n    const currentQuoteColor = quote.day_change >= 0 ? upColor : downColor;\n\n    if (featuredIsLoading) return null;\n    return (\n      <div className=\"markets-grid\">\n        <div className=\"markets-grid__heading\">\n          <h2>Market Overview</h2>\n        </div>\n        {/* section that shows stock indexes */}\n        {featuredIsLoading ? null : (\n          <div className=\"markets-grid__overview\">\n            <Featured\n              featuredIsLoading={featuredIsLoading}\n              featuredStocks={featuredStocks}\n              upColor={upColor}\n              downColor={downColor}\n              handleQuoteChange={handleQuoteChange}\n            />\n          </div>\n        )}\n        {/* section that shows details of clicked index */}\n        <div className=\"markets-grid__info\">\n          {quoteIsLoading ? (\n            <div>Click Items for Details</div>\n          ) : (\n            <TransitionGroup className=\"transition-group\">\n              <CSSTransition\n                key={quote.symbol}\n                in={true}\n                appear={true}\n                timeout={500}\n                classNames=\"slide\"\n              >\n                <section className=\"route-section\">\n                  <Quote\n                    currentQuoteColor={currentQuoteColor}\n                    quote={quote}\n                    historicData={historicData}\n                  />\n                </section>\n              </CSSTransition>\n            </TransitionGroup>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\nconst resources = {};\nfunction makeRequestCreator() {\n  let call;\n\n  return async url => {\n    // check if we made a request\n    if (call) {\n      // cancel the previous request\n      call.cancel();\n    }\n    // create a new CancelToken\n    call = axios.CancelToken.source();\n    try {\n      // do we have this call already\n      if (resources[url]) {\n        // if yes return cached data\n        return resources[url];\n      }\n      const res = await axios(url, { cancelToken: call.token });\n      const result = res.data;\n      // store response\n      resources[url] = result;\n      return result;\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        // handle if request was cancelled\n        console.log('Request canceled', error.message);\n      } else {\n        // handle other errors\n        console.log('Something went wrong: ', error);\n      }\n    }\n  };\n}\n\nexport const get = makeRequestCreator();\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// the search dropdown for the Stock Quote page\nconst Search = ({\n  clearSearch,\n  cursor,\n  handleSearchChange,\n  handleQuoteChange,\n  handleSearchKeyDowns,\n  searchValue,\n  searchResults,\n}) => {\n  return (\n    <div className=\"search-container\">\n      <form className=\"searchForm\">\n        <div className=\"searchForm__inputs\">\n          <input\n            type=\"text\"\n            className=\"searchForm__text\"\n            placeholder=\"Search by symbol or name\"\n            value={searchValue}\n            onChange={e => handleSearchChange(e)}\n            onKeyDown={handleSearchKeyDowns}\n            onBlur={clearSearch}\n          />\n          {/* if the search input value is not empty show the clear button */}\n          {searchValue !== '' && (\n            <button\n              className=\"searchForm__clear\"\n              onClick={e => {\n                e.preventDefault();\n                clearSearch();\n              }}\n            >\n              clear\n            </button>\n          )}\n        </div>\n        {/* if the search results and search input value are not empty show this dropdown */}\n        {searchResults != null && searchValue !== '' && (\n          <div className=\"searchForm__results\">\n            {searchResults.map((result, i) => {\n              const { symbol, name } = result;\n              return (\n                <ul\n                  className={\n                    cursor === i\n                      ? 'searchForm__result active'\n                      : 'searchForm__result'\n                  }\n                  key={symbol}\n                  // use onMouseDown instead of onClick because it fires before onBlur\n                  onMouseDown={() => {\n                    handleQuoteChange(symbol);\n                  }}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <li className=\"searchForm__resultSymbol\">{symbol}</li>\n                  <li className=\"searchForm__resultName\">{name}</li>\n                </ul>\n              );\n            })}\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  clearSearch: PropTypes.func.isRequired,\n  cursor: PropTypes.number.isRequired,\n  handleSearchChange: PropTypes.func.isRequired,\n  handleQuoteChange: PropTypes.func.isRequired,\n  handleSearchKeyDowns: PropTypes.func.isRequired,\n  searchValue: PropTypes.string.isRequired,\n  searchResults: PropTypes.array,\n};\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n// import axios from 'axios';\nimport { get } from './utils';\nimport Search from './Search';\nimport Quote from './Quote';\nimport PropTypes from 'prop-types';\n\nexport default class Stock extends Component {\n  static propTypes = {\n    upColor: PropTypes.string.isRequired,\n    downColor: PropTypes.string.isRequired,\n  };\n\n  state = {\n    cursor: 0,\n    searchValue: '',\n    searchResults: null,\n  };\n\n  // search world trading data for available stock symbols that match the search input\n  search = async val => {\n    try {\n      // uses a utility function get() to generate axios cancel tokens when input is changed while requests are still pending\n      const res = await get(\n        `https://www.worldtradingdata.com/api/v1/stock_search?search_term=${val}&search_by=symbol,name&limit=50&page=1&api_token=${this.props.apiKey}`\n      );\n      const searchResults = res.data;\n      // cache results to cut down on unecessary requests\n      this.setState({ searchResults });\n    } catch (err) {\n      console.log('No search results');\n    }\n  };\n  // handles changes to the search input\n  handleSearchChange = e => {\n    this.search(e.target.value);\n    this.setState({ searchValue: e.target.value });\n  };\n\n  // clears the search input and sets cursor value back to 0\n  clearSearch = () => {\n    this.setState({ searchValue: '', cursor: 0 });\n  };\n\n  // handles behavior of Up, Down, Return, Escape & Delete keys while using the search dropdown\n  handleSearchKeyDowns = e => {\n    const { cursor, searchResults, searchValue } = this.state;\n    // Up Arrow -- navigate up\n    if (e.keyCode === 38 && cursor > 0) {\n      this.setState(prevState => ({ cursor: prevState.cursor - 1 }));\n      // Down Arrow -- navigate down\n    } else if (e.keyCode === 40 && cursor < searchResults.length - 1) {\n      this.setState(prevState => ({ cursor: prevState.cursor + 1 }));\n      // Return -- select symbol & show details\n    } else if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.handleQuoteChange(searchResults[cursor].symbol);\n      this.clearSearch();\n      // Esc -- clear search and reset cursor\n    } else if (\n      e.keyCode === 27 ||\n      // Delete -- reset cursor when value is empty\n      (e.keyCode === 8 && searchValue.length <= 1)\n    ) {\n      this.clearSearch();\n    }\n  };\n\n  render() {\n    const { cursor, searchValue, searchResults } = this.state;\n    const {\n      upColor,\n      downColor,\n      handleQuoteChange,\n      quote,\n      quoteIsLoading,\n      historicData,\n    } = this.props;\n    const currentQuoteColor = quote.day_change >= 0 ? upColor : downColor;\n\n    return (\n      <div className=\"stock-grid\">\n        <div className=\"stock-grid__heading\">\n          <h2>Get a Stock Quote</h2>\n        </div>\n        <div className=\"stock-grid__search\">\n          <Search\n            clearSearch={this.clearSearch}\n            cursor={cursor}\n            searchValue={searchValue}\n            searchResults={searchResults}\n            handleSearchChange={this.handleSearchChange}\n            handleQuoteChange={handleQuoteChange}\n            handleSearchKeyDowns={this.handleSearchKeyDowns}\n          />\n        </div>\n        <div className=\"stock-grid__info\">\n          {quoteIsLoading ? null : (\n            <TransitionGroup className=\"transition-group\">\n              <CSSTransition\n                key={quote.symbol}\n                in={true}\n                appear={true}\n                timeout={500}\n                classNames=\"slide\"\n              >\n                <section className=\"route-section\">\n                  <Quote\n                    currentQuoteColor={currentQuoteColor}\n                    quote={quote}\n                    historicData={historicData}\n                  />\n                </section>\n              </CSSTransition>\n            </TransitionGroup>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// pick a currency to convert from USD\n// send the value to onSelectCurrency to be used as a key for the data array\nconst currencySelect = ({ currenciesArray, onSelectCurrency }) => {\n  return (\n    <select\n      id=\"convert-select\"\n      className=\"calculator__convert-select\"\n      onChange={e => onSelectCurrency(e.target.value)}\n    >\n      {currenciesArray.map((currency, i) => {\n        const { name, value } = currency;\n        return (\n          <option value={value} key={i}>\n            {name}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n\ncurrencySelect.prototypes = {\n  currenciesArray: PropTypes.array.isRequired,\n  onSelectCurrency: PropTypes.func.isRequired,\n};\n\nexport default currencySelect;\n","import React from 'react';\nimport CurrencySelect from './CurrencySelect';\nimport PropTypes from 'prop-types';\n\nconst Calculator = ({\n  onSelectCurrency,\n  valueA,\n  valueB,\n  handleInputChange,\n}) => {\n  // names are for display in the selector\n  // values are sent to the onSelectCurrency function\n  const currenciesArray = [\n    { name: 'European Euros', value: 'EUR' },\n    { name: 'Japanese Yen', value: 'JPY' },\n    { name: 'British Pounds', value: 'GBP' },\n    { name: 'Swiss Francs', value: 'CHF' },\n    { name: 'Canadian Dollars', value: 'CAD' },\n    { name: 'Australian Dollars', value: 'AUD' },\n    { name: 'New Zealand', value: 'NZD' },\n    { name: 'South African Rand', value: 'ZAR' },\n  ];\n\n  return (\n    <div className=\"calculator\">\n      {/* Currency A is always set to USD, but that could be changed in the future */}\n      <div className=\"calculator__currency-A\">\n        <label htmlFor=\"usd-input\" className=\"calculator__label-A\">\n          US Dollars\n        </label>\n        <br />\n        <input\n          className=\"calculator__input-A calculator__input--style\"\n          value={valueA}\n          type=\"number\"\n          name=\"usd\"\n          id=\"usd-input\"\n          onChange={e => {\n            handleInputChange(e, 'A');\n          }}\n        />\n      </div>\n      {/* equals sign not visible on mobile */}\n      <div className=\"calculator__equals-sign\">=</div>\n      <div className=\"calculator__currency-B\">\n        <div className=\"calculator__select\">\n          <label htmlFor=\"convert-select\" className=\"calculator__select-label\">\n            Convert to:\n          </label>\n          <CurrencySelect\n            currenciesArray={currenciesArray}\n            onSelectCurrency={onSelectCurrency}\n          />\n        </div>\n        <input\n          className=\"calculator__input-B calculator__input--style\"\n          value={valueB}\n          type=\"number\"\n          name=\"convert-to\"\n          id=\"convert-to\"\n          onChange={e => {\n            handleInputChange(e, 'B');\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nCalculator.propTypes = {\n  valueA: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  valueB: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  ratesAreLoading: PropTypes.bool.isRequired,\n};\n\nexport default Calculator;\n","import React, { Component } from 'react';\nimport Calculator from './Calculator';\nimport axios from 'axios';\nexport default class Forex extends Component {\n  state = {\n    currencyA: 'USD',\n    currencyB: 'EUR',\n    valueA: 1,\n    valueB: 0,\n    rates: [],\n    ratesAreLoading: true,\n  };\n\n  // fetch the current exchange rates when the page loads\n  componentDidMount() {\n    this.getExchangeRates(this.state.currencyA);\n  }\n\n  // use axios to fetch the exchange rates for the input value (USD)\n  getExchangeRates = async val => {\n    try {\n      const res = await axios(\n        `https://www.worldtradingdata.com/api/v1/forex?base=${val}&sort=newest&api_token=${\n          this.props.apiKey\n        }`\n      );\n      const data = res.data.data;\n      this.setState({\n        valueB: data[this.state.currencyB],\n        rates: data,\n        ratesAreLoading: false,\n      });\n      // console.log(data);\n    } catch (err) {\n      console.log('Error fetching stock data', err);\n    }\n  };\n\n  // set currency B rate and value of input B when the selector is changed\n  onSelectCurrency = val => {\n    const { valueA, rates } = this.state;\n    this.setState({ currencyB: val, valueB: (valueA * rates[val]).toFixed(6) });\n  };\n\n  // calculate the value of the other input on input change\n  handleInputChange = (e, input) => {\n    const { currencyB, rates } = this.state;\n    const rate = rates[currencyB];\n    if (input === 'A') {\n      const newValue = e.target.value;\n      this.setState({\n        valueA: newValue,\n        valueB: (newValue * rate).toFixed(6),\n      });\n    }\n    if (input === 'B') {\n      const newValue = e.target.value;\n      this.setState({\n        valueB: newValue,\n        valueA: (newValue / rate).toFixed(6),\n      });\n    }\n  };\n\n  render() {\n    const {\n      valueA,\n      valueB,\n      currencyA,\n      currencyB,\n      ratesAreLoading,\n      rates,\n    } = this.state;\n    if (ratesAreLoading) return null;\n    return (\n      <div className=\"forex-grid\">\n        <div className=\"forex-grid__heading\">\n          <h2>Exchange Rate Calculator</h2>\n        </div>\n        <div className=\"forex-grid__calculator\">\n          <Calculator\n            onSelectCurrency={this.onSelectCurrency}\n            handleInputChange={this.handleInputChange}\n            valueA={valueA}\n            valueB={valueB}\n            ratesAreLoading={ratesAreLoading}\n          />\n        </div>\n        <div className=\"forex-grid__exchange-rate\">\n          <p>{`1 ${currencyA} equals ${rates[currencyB]} ${currencyB}.`}</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport axios from 'axios';\nimport Markets from './Markets';\nimport Stock from './Stock';\nimport Forex from './Forex';\n\nfunction todaysDate(yearsAgo = 0) {\n  const today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1;\n  let yyyy = today.getFullYear() - yearsAgo;\n  if (dd < 10) dd = '0' + dd;\n  if (mm < 10) mm = '0' + mm;\n  return `${yyyy}-${mm}-${dd}`;\n}\nfunction convertToUnix(dateString) {\n  return new Date(dateString).getTime();\n}\nfunction formatForHighcharts(data) {\n  return Object.keys(data).map(key => [\n    convertToUnix(key),\n    Number(data[key].close),\n  ]);\n}\n\nconst Container = ({ location }) => {\n  const [quote, setQuote] = useState({});\n  const [historicData, setHistoricData] = useState([]);\n  const [quoteSymbol, setQuoteSymbol] = useState('');\n  const [quoteIsLoading, setQuoteIsLoading] = useState(true);\n\n  const handleQuoteChange = symbol => {\n    fetchRealtimeData(symbol);\n    fetchHistoricData(symbol);\n    setQuoteSymbol(symbol);\n  };\n\n  // fetch data for the chosen stock symbol\n  const fetchRealtimeData = async symbol => {\n    try {\n      const res = await axios(\n        `https://www.worldtradingdata.com/api/v1/stock?symbol=${symbol}&api_token=${apiKey}`\n      );\n      const data = res.data.data;\n      const stockQuote = data[0];\n      setQuote(stockQuote);\n      // console.log(stockQuote);\n    } catch (err) {\n      console.log('Error fetching stock data', err);\n    }\n  };\n  const fetchHistoricData = async symbol => {\n    // const dateTo = todaysDate();\n    const dateFrom = todaysDate(1);\n    try {\n      const res = await axios(\n        `https://api.worldtradingdata.com/api/v1/history?symbol=${symbol}&date_from=${dateFrom}&sort=oldest&api_token=${apiKey}`\n      );\n      const data = res.data.history;\n      const formattedData = formatForHighcharts(data);\n      // console.log(formattedData);\n      setHistoricData(formattedData);\n      setQuoteIsLoading(false);\n    } catch (err) {\n      console.log('Error fetching stock data', err);\n    }\n  };\n\n  // api key stored in .env file which is not committed\n  const apiKey = process.env.REACT_APP_API_KEY;\n  // colors used throughout app\n  const upColor = '#1ac567';\n  const downColor = '#ff333a';\n  return (\n    <TransitionGroup className=\"transition-group\">\n      <CSSTransition key={location.pathname} timeout={700} classNames=\"fade\">\n        <section className=\"route-section\">\n          <Switch location={location}>\n            <Route\n              path=\"/markets\"\n              render={props => (\n                <Markets\n                  {...props}\n                  upColor={upColor}\n                  downColor={downColor}\n                  apiKey={apiKey}\n                  handleQuoteChange={handleQuoteChange}\n                  quote={quote}\n                  quoteSymbol={quoteSymbol}\n                  quoteIsLoading={quoteIsLoading}\n                  historicData={historicData}\n                />\n              )}\n            />\n            <Route\n              path=\"/stock\"\n              render={props => (\n                <Stock\n                  {...props}\n                  upColor={upColor}\n                  downColor={downColor}\n                  apiKey={apiKey}\n                  handleQuoteChange={handleQuoteChange}\n                  quote={quote}\n                  quoteSymbol={quoteSymbol}\n                  quoteIsLoading={quoteIsLoading}\n                  historicData={historicData}\n                />\n              )}\n            />\n            <Route\n              path=\"/forex\"\n              render={props => <Forex {...props} apiKey={apiKey} />}\n            />\n          </Switch>\n        </section>\n      </CSSTransition>\n    </TransitionGroup>\n  );\n};\n\nexport default withRouter(Container);\n","import React from 'react';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.scss';\nimport Header from './js/Header';\nimport Main from './js/Main';\n\nfunction App() {\n  return (\n    <Router>\n      <CSSTransition in={true} appear={true} timeout={500} classNames=\"fade\">\n        <div className=\"app-container\">\n          {/* homepage redirects to markets page */}\n          <Route exact path=\"/\" render={() => <Redirect to=\"/markets\" />} />\n          <header className=\"header\">\n            <Header />\n          </header>\n\n          <main className=\"main\">\n            <Main />\n          </main>\n        </div>\n      </CSSTransition>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}